library(humdrumR)
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/*harm') -> z
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/ConvertedHarmFiles/*.harm') -> new
z$Token == new$Token
table(z$Spine, z$Token == new$Token)
z[[,1]]$Token
z[[,1]]$Token==new[[,1]]$Token
table(z[[,1]]$Token==new[[,1]]$Token)
which(z[[,1]]$Token!=new[[,1]]$Token)
z$Filename[60721]
z$Record[60721]
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/ConvertedHarmFiles/*.harm') -> new
which(z[[,1]]$Token!=new[[,1]]$Token)
z$Filename[60721]
z$Filename[61044]
z$File[61044]
z[76]
new[76]
z[76]
new[76]
z[76]
cbind(z[[,1]]$Token, new[[,1]],$Token, (z[[,1]]$Token!=new[[,1]]$Token))
cbind(z[[,1]]$Token, new[[,1]]$Token, (z[[,1]]$Token!=new[[,1]]$Token))
data.frame(A=z[[,1]]$Token, B=new[[,1]]$Token, C=(z[[,1]]$Token!=new[[,1]]$Token)) |> subset(C==TRUE)
data.frame(A=z[[,1]]$Token, B=new[[,1]]$Token, C=(z[[,1]]$Token!=new[[,1]]$Token)) |> subset(C==FALSE)
data.table(A=z[[,1]]$Token, B=new[[,1]]$Token)
data.table(A=z[[,1]]$Token, B=new[[,1]]$Token)[A!=B]
data.table(A=z[[,1]]$Token, B=new[[,1]]$Token,Filename = z[[,1]]$Filename)[A!=B]
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/ConvertedHarmFiles/*.harm') -> new
data.frame(A=z[[,1]]$Token, B=new[[,1]]$Token, C=(z[[,1]]$Token!=new[[,1]]$Token)) |> subset(C==FALSE)
new
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/*harm') -> old
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/ConvertedHarmFiles/*.harm') -> new
census(old)$File
census(old)$Filename
census(old)$Filename == census(new)$Filename
table(unlist(census(old)$Filename) == unlist(census(new)$Filename))
old[[,1]]$Token == new[[,1]]$Token
table(old[[,1]]$Token == new[[,1]]$Token)
table(old[[,2]]$Token == new[[,2]]$Token)
old[[,2]]$TOken
old[[,2]]$Token
old |> with(Token[Spine == 2 & Stop == 1])
old |> with(Token[Spine == 2 & Stop == 1]) |> length()
new$Token
new$Token |> length()
new$Token[[,2]] |> length()
new[[,2]]$Token |> length()
old |> with(Token[Spine == 2 & Stop == 1]) |> length()
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/*hum') -> old
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/*hum') -> k
k |> filter(Exclusive == 'leadinstrument') |> table()
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/ConvertedHarmFiles/*.harm') -> new
new |> table(Stop, Exclusive)
new[[,2]]$Token |> length()
old |> with(Token[Spine == 2 & Stop == 1]) |> length()
old |> with(Token[Spine == 2 & Stop == 1]) |> pull()
old |> with(Token[Spine == 2 & Stop == 1])
new[[,2]]$Token == () old |> with(Token[Spine == 2 & Stop == 1]) )
new[[,2]]$Token == (old |> with(Token[Spine == 2 & Stop == 1]))
table(new[[,2]]$Token == (old |> with(Token[Spine == 2 & Stop == 1])))
(old |> with(Token[Spine == 2 & Stop == 1]))
new[[,2]]$Token
(old |> with(Token[Spine == 2 & Stop == 1]))
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/ConvertedHarmFiles/*.harm') -> new
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/*harm$') -> old
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/*harm$') -> old
(old |> with(Token[Spine == 2 & Stop == 1]))
new$TOken
new$Tken
new[[,2$Token
new[[,2]]$Token
new[[,2]]$Token
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/*harm|*hum') -> k
interpretations(k)
as.matrices(k)
as.matrices(k[1:4])
as.matrices(k[1:4], dataTypes = 'I')
lapply(as.matrices(k, dataTypes = 'I'), '[', i = 1) -> l
l
sapply(as.matrices(k, dataTypes = 'I'), \(x) paste(x[i, ], collapse = '\t')) -> l
sapply(as.matrices(k, dataTypes = 'I'), \(x) paste(x[1, ], collapse = '\t')) -> l
l
sort(l) |> unique() |> cat(sep = '\n')
census(k)
z
sort(l) |> unique() |> cat(sep = '\n')
k
k[[,2]]
k[[,2]] |> table()
k[[,2]] |> pull() |> gsub(':.*','')
k[[,2]] |> pull() |> gsub(':.*','', x=_)
k[[,2]] |> pull() |> gsub(':.*','', x=_) |> table()
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/*harm|*hum') -> k
k[[,2]] |> pull() |> gsub(':.*','', x=_) |> table()
k |> with(paste0(File, Record)[grepl('0', Token) & Exclusive == 'harte'])
k |> with(paste0(File, ',',Record)[grepl('0', Token) & Exclusive == 'harte'])
k[383]
k |> with(paste0(File, ',',Record)[grepl('0', Token) & Exclusive == 'harte'])
k[[,2]] |> pull() |> gsub(':.*','', x=_) |> table()
k |> with(paste0(File, ',',Record)[grepl('1r', Token) & Exclusive == 'harte'])
k |> with(paste0(File, ',',Record)[Token == '1r' & Exclusive == 'harte'])
k |> with(paste0(File, ',',Record)[grepl('0', Token) & Exclusive == 'harte'])
k[[,2]] |> pull() |> gsub(':.*','', x=_) |> table()
k |> with(paste0(File, ',',Record)[Token == '1.r' & Exclusive == 'harte'])
k |> with(paste0(Filename, ',',Record)[Token == '1.r' & Exclusive == 'harte'])
k |> with(paste0(Filename, ',',Record)[Token == '1.r' & Exclusive == 'harte'])
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/*harm|*hum') -> k
k[[,2]] |> pull() |> gsub(':.*','', x=_) |> table()
k |> with(paste0(File, ',',Record)[grepl(',', Token) & Exclusive == 'harte'])
k[[,2]] |> pull() |> gsub(':.*','', x=_) |> table()
k |> with(Token[grepl(',', Token) & Exclusive == 'harte'])
k |> with(Token[grepl(',', Token) & Exclusive == 'harte']) |> gsub(':.*','', x=_)
k |> with(Token[grepl(',', Token) & Exclusive == 'harte'])
k[[,2]] |> pull() |> gsub(':.*','', x=_) |> table()
x[[,2]]$Token
k[[,2]]$Token
k[[,2]]$Token |> gsub(':.*', '', x=_)
which(k[[,2]]$Token |> gsub(':.*', '', x=_)) == ','
which(k[[,2]]$Token |> gsub(':.*', '', x=_) == ',')
x[[,2]]$Token[47254]
k[[,2]]$Token[47254]
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/*harm|*hum') -> k
k[[,2]] |> pull() |> gsub(':.*','', x=_) |> table()
k |> count(File, Barline)
fields(k)
k |> count(File, BarLabel)
k |> count(File, BarLabel, Record)
k |> with(dataTypes = 'M', count(File, BarLabel, Record))
(k |> with(dataTypes = 'M', count(File, BarLabel, Record)))[,length(unique(Count)), by = File]
(k |> with(dataTypes = 'M', count(File, BarLabel, Record)))[,length(unique(Count)), by = File]
as.data.table(k |> with(dataTypes = 'M', count(File, BarLabel, Record)))[,length(unique(Count)), by = File]
as.data.table(k |> with(dataTypes = 'M', count(File, BarLabel, Record))@.Data)[,length(unique(Count)), by = File]
as.data.table((k |> with(dataTypes = 'M', count(File, BarLabel, Record)))@.Data)[,length(unique(Count)), by = File]
as.data.table((k |> with(dataTypes = 'M', count(File, BarLabel, Record)))@.Data)
as.data.table((k |> with(dataTypes = 'M', count(File, BarLabel, Record)))@.Data)[,length(unique(V4)), by = V1]
as.data.table((k |> with(dataTypes = 'M', count(File, BarLabel, Record)))@.Data)[,list(l=length(unique(V4))), by = V1]
as.data.table((k |> with(dataTypes = 'M', count(File, BarLabel, Record)))@.Data)[,list(l=length(unique(V4))), by = V1][l > 1]
readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/*harm|*hum') -> k
k[[,2]] |> pull() |> gsub(':.*','', x=_) |> table()
bb <- readHumdrum('~/Bridge/Research/Data/CoCoPops/Billboard/Data/.*hum|.*harm')
